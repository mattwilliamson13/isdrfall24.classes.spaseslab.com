---
title: "Session 17 code"
author: "Carolyn Koehn"
format: html
---

Load libraries:

```{r}
library(rgbif)
library(sf)
library(spatstat)
library(tidyverse)
```

Get data:

```{r}
id <- tigris::states() %>%
  filter(NAME == "Idaho") %>%
  st_transform(crs=4326)
```

```{r}
gold_eag <- occ_search(scientificName = "Aquila chrysaetos",
                       country = "US",
                       hasCoordinate = TRUE,
                       limit = 1000)
```

Prepare data for analysis:

```{r}
gold_eag_dat <- gold_eag$data
```

```{r}
# convert to spatial data
gold_eag_sf <- gold_eag_dat %>%
  filter(!is.na(decimalLatitude) & !is.na(decimalLongitude)) %>%
  st_as_sf(., coords = c("decimalLongitude", "decimalLatitude"), crs=4326)

plot(st_geometry(gold_eag_sf))
```

```{r}
# subset to study area
gold_eag_id <- gold_eag_sf[id, ]

plot(st_geometry(id))
plot(st_geometry(gold_eag_id), add=TRUE)
```

## Kernel Density Estimates

### Prepare data for spatstat

```{r}
# must be mapped on a plane - projected CRS
gold_eag_id_proj <- st_transform(gold_eag_id, crs = 5070)
id_proj <- st_transform(id, crs = 5070)
```

```{r}
# convert to ppp object
gold_eag.ppp <- gold_eag_id_proj %>%
  as.ppp()

# remove marks from points
marks(gold_eag.ppp) <- NULL
# set study area to Idaho
Window(gold_eag.ppp) <- as.owin(id_proj)
```

### Kernel Density Estimates with different bandwidths

```{r}
kde0 <- density(gold_eag.ppp)
plot(kde0, main="Default KDE for ID golden eagles")

kde1 <- density(gold_eag.ppp, adjust = 0.75)
plot(kde1, main="Bandwidth reduced by 0.75")
```

## Ripley's K

```{r}
k0 <- Kest(gold_eag.ppp)
plot(k0)
```

The x axis shows the increasing radius of the circle tested and the y axis shows the $K$ at any given radius.

Different color lines show difference edge corrections. In the next step, we used `border` because it is the fastest. More information on edge correction can be found in the details section of the `Kest` help file (`?Kest`).

To test whether our points are clustered, we generate a $K$ for completely spatially random points (red line below).

```{r}
k.env <- envelope(gold_eag.ppp, correction="border", envelope = FALSE)
plot(k.env)
```

The error is generated by the 99 simulations of CSR printed as output. Here, we see our data are clustered (spatially autocorrelated) from the very smallest scale (r = 1) to a radius of about 90,000 meters.