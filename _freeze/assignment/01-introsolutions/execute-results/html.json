{
  "hash": "a690e2efd64ec94bed49a8696fdc01a7",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Assignment 1 Solutions: Introductory material\"\n---\n\n\n\n<span style=\"color:#9F281A;\">How does geographic analysis fit into your goals for your research? Given our discussion of the aims and limitations of geographic analysis, are there particular issues that you would like to know more about or guard against?</span>\n\n>My research is based almost entirely on geographic analysis, between estimating ecosystem services and studying agricultural change through time in different Idaho locations. One issue I face is that I integrate ecosystem services data collected and estimated at multiple scales into one analysis. I have to be careful I don't fall into any pitfalls or fallacies when I combine multiple sources of data. In other cases, I have county level data and have to acknowledge the measurement bias that comes with data collection along those policial boundaries.\n\n<span style=\"color:#9F281A;\">What are the primary components that describe spatial data?</span>\n\n>I would say that the primary components are the coordinate reference system (because it helps us understand where we actually are on Earth), the extent of the data (because that helps me know what scale we're working with and the size of the computational problem), the resolution (same reason as extent), the geometry, and spatial support. I don't think about this last one often enough, but it really is the key to honest interpretation of the spatial data that you have. \n\n<span style=\"color:#9F281A;\">What is the coordinate reference system and why is it important</span>\n\n>The CRS consists of the information necessary to locate points in 2 or 3 dimensional space. Coordinates are only meaningful in the context of a CRS (i.e., (2,2) could describe any number of places in the world - we need to know the origin and the datum to actually know where that is). The CRS becomes particularly important when we need to align datasets that were not collected in the same CRS originally or when we need to transfer locations from the globe to a flat surface (e.g., map, screen, etc).\n\n<span style=\"color:#9F281A;\">Find two maps of the same area in different projections? How does the projection affect your perception of the data being displayed?</span>\n\n>Here's a fun article on [projections](https://www.nature.com/nature-index/news/data-visualisation-animated-map-mercater-projection-true-size-countries) that shows what I'm talking about!\n\n<span style=\"color:#9F281A;\">Read in the cejst_nw.shp file in the assignment01 folder. How many attributes describe each object? How many unique geometries are there? What is the coordinate reference system?</span>\n\nI can read in the data using `st_read` or `read_sf`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sf)\n\ncejst.sf <- read_sf(\"/opt/data/data/assignment01/cejst_nw.shp\")\ncejst.st <- st_read(\"/opt/data/data/assignment01/cejst_nw.shp\")\n```\n:::\n\n\n\n\n\nYou can inspect the differences between the resulting object classes by calling `class`\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| message: false\n\nclass(cejst.sf)\nclass(cejst.st)\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"sf\"         \"tbl_df\"     \"tbl\"        \"data.frame\"\n[1] \"sf\"         \"data.frame\"\n```\n\n\n:::\n:::\n\n\nYou'll notice that using `st_read` assigns the object to an `sf` and `data.frame` class meaning that functions defined for those two classes will work. Alternatively, `read_sf` assigns the object to `sf`, `tbl_df`, `tbl`, and `data.frame` classes meaning that a much broader set of functions can be run on the `cejst.sf` object.\n\nBecause the data are in [wide format](https://www.statology.org/long-vs-wide-data/), we can assume that there is only 1 observation for each location (because `sf` requires that there is a geometry entry for every observation (even if it's empty)). Probably the easiest way to get the number of observations is:\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\nnrow(cejst.sf)\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2590\n```\n\n\n:::\n:::\n\n\nSimilarly, if we wanted to know how many attributes are collected for each observation we could use `ncol`:\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\nncol(cejst.sf)\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 124\n```\n\n\n:::\n:::\n\n\nNote that these are really only approximate estimates. There's usually a lot of extra ID-style columns in spatial data such that the number of columns with useful information is less than the total number of columns, but we won't worry about that for now.",
    "supporting": [
      "01-introsolutions_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}