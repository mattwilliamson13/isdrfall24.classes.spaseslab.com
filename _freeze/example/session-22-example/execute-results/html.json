{
  "hash": "757ce7b446bdb41e44e9741c95820a75",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Session 22 code\"\nauthor: \"Carolyn Koehn\"\nformat: html\n---\n\n\n\n\n## Review from session 16\n\nLoad libraries:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sf)\nlibrary(terra)\nlibrary(tidyverse)\nlibrary(tmap)\nlibrary(tree)\nlibrary(randomForest)\n```\n:::\n\n\n\n\nLoad data:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndownload_unzip_read <- function(link){\n  tmp <- tempfile()\n  download.file(link, tmp)\n  tmp2 <- tempfile()\n  unzip(zipfile=tmp, exdir=tmp2)\n  shapefile.sf <- read_sf(tmp2)\n}\n\n### FS Boundaries\nfs.url <- \"https://data.fs.usda.gov/geodata/edw/edw_resources/shp/S_USA.AdministrativeForest.zip\"\nfs.bdry <- download_unzip_read(link = fs.url)\n\n### CFLRP Data\ncflrp.url <- \"https://data.fs.usda.gov/geodata/edw/edw_resources/shp/S_USA.CFLR_HPRP_ProjectBoundary.zip\"\ncflrp.bdry <- download_unzip_read(link = cflrp.url)\n\nwildfire_haz <- rast(\"/opt/data/data/assignment01/wildfire_hazard_agg.tif\")\n\ncejst <- st_read(\"/opt/data/data/assignment01/cejst_nw.shp\", quiet=TRUE) %>%\n  filter(!st_is_empty(.))\n```\n:::\n\n\n\n\n\n\nCheck validity:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall(st_is_valid(fs.bdry))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nall(st_is_valid(cflrp.bdry))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nfs.bdry <- st_make_valid(fs.bdry)\ncflrp.bdry <- st_make_valid(cflrp.bdry)\n```\n:::\n\n\n\n\nCheck alignment:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_crs(wildfire_haz) == st_crs(fs.bdry)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nst_crs(wildfire_haz) == st_crs(cflrp.bdry)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nst_crs(wildfire_haz) == st_crs(cejst)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nfs.bdry_proj <- st_transform(fs.bdry, crs = st_crs(wildfire_haz))\ncflrp.bdry_proj <- st_transform(cflrp.bdry, crs = st_crs(wildfire_haz))\ncejst_proj <- st_transform(cejst, crs = st_crs(wildfire_haz))\n```\n:::\n\n\n\n\nSubset to relevant geographies:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfs.bdry_sub <- fs.bdry_proj[cejst_proj, ]\ncflrp.bdry_sub <- cflrp.bdry_proj[cejst_proj, ]\n\ncejst_sub <- cejst_proj[fs.bdry_sub, ]\n```\n:::\n\n\n\n\nSelect relevant attributes:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncejst_sub <- cejst_sub %>%\n  select(GEOID10, LMI_PFS, LHE, HBF_PFS)\n```\n:::\n\n\n\n\nExtract wildfire risk:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwf_risk <- terra::extract(wildfire_haz, cejst_sub, fun=mean)\n\ncejst_sub$WHP_ID <- wf_risk$WHP_ID\n```\n:::\n\n\n\n\nCFLRP T or F:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncflrp <- apply(st_intersects(cejst_sub, cflrp.bdry_sub, sparse = FALSE), 1, any)\n\ncejst_sub$CFLRP <- cflrp\n```\n:::\n\n\n\n\n## Comparing/Predicting CFLRP tracts\n\n### Data preparation\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncejst_mod <- cejst_sub %>%\n  st_drop_geometry(.) %>%\n  na.omit(.)\n\ncejst_mod[, c(\"LMI_PFS\", \"LHE\", \"HBF_PFS\", \"WHP_ID\")] <- scale(cejst_mod[, c(\"LMI_PFS\", \"LHE\", \"HBF_PFS\", \"WHP_ID\")])\n```\n:::\n\n\n\n\n### Logistic regression\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlogistic.global <- glm(CFLRP ~ LMI_PFS + LHE + HBF_PFS + WHP_ID,\n                       family = binomial(link = \"logit\"),\n                       data = cejst_mod)\nsummary(logistic.global)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nglm(formula = CFLRP ~ LMI_PFS + LHE + HBF_PFS + WHP_ID, family = binomial(link = \"logit\"), \n    data = cejst_mod)\n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept) -0.66462    0.14347  -4.632 3.62e-06 ***\nLMI_PFS      0.17284    0.16881   1.024    0.306    \nLHE         -0.25551    0.15791  -1.618    0.106    \nHBF_PFS     -0.01511    0.16081  -0.094    0.925    \nWHP_ID       0.88902    0.16785   5.297 1.18e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 330.74  on 255  degrees of freedom\nResidual deviance: 290.03  on 251  degrees of freedom\nAIC: 300.03\n\nNumber of Fisher Scoring iterations: 4\n```\n\n\n:::\n:::\n\n\n\n\n### Classification Tree\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tree)\ncejst_mod$CFLRP <- as.factor(ifelse(cejst_mod$CFLRP == 1, \"Yes\", \"No\"))\ntree.model <- tree(CFLRP ~ LMI_PFS + LHE + HBF_PFS + WHP_ID, cejst_mod)\nplot(tree.model, type = \"uniform\")\ntext(tree.model, pretty=0)\n```\n\n::: {.cell-output-display}\n![](session-22-example_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\n\n### Random Forest\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(randomForest)\nclass.model <- CFLRP ~ .\nrf2 <- randomForest(formula = class.model, cejst_mod[,-1])\nvarImpPlot(rf2)\n```\n\n::: {.cell-output-display}\n![](session-22-example_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "session-22-example_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}