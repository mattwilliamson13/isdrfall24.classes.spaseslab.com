{
  "hash": "1634a74bc9e613ee1c1b5198163bc2f5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Session 20 code\"\nauthor: \"Carolyn Koehn\"\nformat: html\n---\n\n\n\n\nLoad libraries:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sf)\nlibrary(spdep)\nlibrary(tidyverse)\nlibrary(tmap)\n```\n:::\n\n\n\n\nLoad data:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncdc <- read_sf(\"/opt/data/data/vectorexample/cdc_nw.shp\") %>% \n  select(stateabbr, countyname, countyfips, casthma_cr)\n\nplot(cdc[\"casthma_cr\"])\n```\n:::\n\n\n\n\n\n\n## Find neighbors based on contiguity\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnb.qn <- poly2nb(cdc, queen = TRUE)\nnb.rk <- poly2nb(cdc, queen = FALSE)\n```\n:::\n\n\n\n\nvisualize\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow=c(1,2))\nplot(st_geometry(cdc), border = 'lightgrey')\nplot(nb.qn, st_coordinates(st_centroid(cdc)), add=TRUE, col='red', main=\"Queen's case\")\nplot(st_geometry(cdc), border = 'lightgrey')\nplot(nb.rk, st_coordinates(st_centroid(cdc)), add=TRUE, col='blue', main=\"Rook's case\")\n```\n\n::: {.cell-output-display}\n![](session-20-example_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\npar(mfrow=c(1,1))\n```\n:::\n\n\n\n\n\n### Get weights\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlw.qn <- nb2listw(nb.qn, style=\"W\", zero.policy = TRUE)\n\nlw.qn$weights[1:5]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[1] 0.5 0.5\n\n[[2]]\n[1] 0.25 0.25 0.25 0.25\n\n[[3]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[4]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[5]]\n[1] 1\n```\n\n\n:::\n:::\n\n\n\n\n### Get distance\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nasthma.lag <- lag.listw(lw.qn, cdc$casthma_cr)\n\nhead(asthma.lag)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 10.30000  9.57500  9.88000 10.26667  9.50000  9.90000\n```\n\n\n:::\n:::\n\n\n\n\n### Get Moran's I\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nM <- lm(asthma.lag ~ cdc$casthma_cr)\n\nM\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = asthma.lag ~ cdc$casthma_cr)\n\nCoefficients:\n   (Intercept)  cdc$casthma_cr  \n        3.7209          0.6357  \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(x = cdc$casthma_cr, y = asthma.lag)\nabline(M$coefficients[1], M$coefficients[2], col=\"red\")\n```\n\n::: {.cell-output-display}\n![](session-20-example_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n\n### Compare to null hypothesis\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn <- 400L   # Define the number of simulations\nI.r <- vector(length=n)  # Create an empty vector\n\nfor (i in 1:n){\n  # Randomly shuffle asthma values\n  x <- sample(cdc$casthma_cr, replace=FALSE)\n  # Compute new set of lagged values\n  x.lag <- lag.listw(lw.qn, x)\n  # Compute the regression slope and store its value\n  M.r    <- lm(x.lag ~ x)\n  I.r[i] <- coef(M.r)[2]\n}\n```\n:::\n\n\n\n\n### Moran test code\n\n`moran.test` uses a few key assumptions, including that the data is normally distributed\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmoran.test(cdc$casthma_cr, lw.qn)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  cdc$casthma_cr  \nweights: lw.qn  \nn reduced by no-neighbour observations  \n\nMoran I statistic standard deviate = 40.826, p-value < 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     0.6381428057     -0.0005037783      0.0002447034 \n```\n\n\n:::\n:::\n\n\n\n\n## Find neighbors based on distance\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncdc.pt <- st_point_on_surface(cdc)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: st_point_on_surface assumes attributes are constant over geometries\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in st_point_on_surface.sfc(st_geometry(x)): st_point_on_surface may not\ngive correct results for longitude/latitude data\n```\n\n\n:::\n\n```{.r .cell-code}\n# another option is st_centroid\n\n# get nearest neighbor for each point\ngeog.nearnb <- knn2nb(knearneigh(cdc.pt, k=1))\n\n# get list of nearest neighbors so that every tract has at least one neighbor\nnb.nearest <- dnearneigh(cdc.pt,\n                         d1 = 0,\n                         d2 = max(unlist(nbdists(geog.nearnb, cdc.pt))))\n```\n:::\n\n\n\n\n### Get weights and distance\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlw.nearest <- nb2listw(nb.nearest, style=\"W\")\nasthma.lag <- lag.listw(lw.nearest, cdc$casthma_cr)\n```\n:::\n\n\n\n\n### Calculate Moran's I\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nM2 <- lm(asthma.lag ~ cdc$casthma_cr)\n\nM2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = asthma.lag ~ cdc$casthma_cr)\n\nCoefficients:\n   (Intercept)  cdc$casthma_cr  \n        8.8547          0.1578  \n```\n\n\n:::\n:::\n\n\n\n\nvisualize:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(x = cdc$casthma_cr, y = asthma.lag)\nabline(M2$coefficients[1], M2$coefficients[2], col=\"red\")\n```\n\n::: {.cell-output-display}\n![](session-20-example_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\n\n### Simulate data under null hypothesis\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn <- 400L   # Define the number of simulations\nI.r <- vector(length=n)  # Create an empty vector\n\nfor (i in 1:n){\n  # Randomly shuffle asthma values\n  x <- sample(cdc$casthma_cr, replace=FALSE)\n  # Compute new set of lagged values - use new neighbors!\n  x.lag <- lag.listw(lw.nearest, x)\n  # Compute the regression slope and store its value\n  M.r    <- lm(x.lag ~ x)\n  I.r[i] <- coef(M.r)[2]\n}\n```\n:::\n\n\n\n\n#### Closer look at simulation\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ni <- 1\nI.r <- vector(length=n)  # Create an empty vector\n\n# Randomly shuffle asthma values\nx <- sample(cdc$casthma_cr, replace=FALSE)\n\nrandom_data <- cbind(cdc, x)\n\nplot(random_data[\"x\"])\n```\n\n::: {.cell-output-display}\n![](session-20-example_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Compute new set of lagged values\nx.lag <- lag.listw(lw.nearest, x)\n\nhead(x.lag)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 10.61818 10.50821 10.51805 10.48258 10.45769 10.51111\n```\n\n\n:::\n\n```{.r .cell-code}\n# Compute the regression slope and store its value\nM.r    <- lm(x.lag ~ x)\nI.r[i] <- coef(M.r)[2]\n  \nhead(I.r)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -0.002479055  0.000000000  0.000000000  0.000000000  0.000000000\n[6]  0.000000000\n```\n\n\n:::\n:::\n\n\n\n\n## Do it with new data\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncejst <- st_read(\"/opt/data/data/assignment01/cejst_nw.shp\")\n\ncejst.id <- cejst %>%\n  filter(SF == \"Idaho\") %>%\n  select(CF, SF, EPLR_PFS)\n```\n:::\n\n\n\n\n\n\nAfter this, we tried our hand at tackling the homework questions with the `cejst` data individually.\n\nUse the nearest-neighbor approach that we used in class to estimate the lagged values for the cejst dataset and estimate the slope of the line describing Moran's I statistic.\n\nNow use the permutation approach to compare your measured value to one generated from multiple simulations. Generate the plot of the data. Do you see more evidence of spatial autocorrelation?\n\n\n",
    "supporting": [
      "session-20-example_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}