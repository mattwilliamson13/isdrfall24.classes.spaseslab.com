{
  "hash": "77f9e433abaa339e75b4b1eee3ae3da9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Session 16 code\"\nauthor: \"Carolyn Koehn\"\nformat: html\n---\n\n\n\n\nLoad libraries:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(terra)\n```\n:::\n\n\n\n\nLoad data:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhospitals_pnw <- read_csv(\"/opt/data/data/assignment06/landmarks_pnw.csv\") %>%\n  filter(., MTFCC == \"K2543\") %>%\n  st_as_sf(., coords = c(\"longitude\", \"latitude\"), crs=4269) %>%\n  st_transform(crs = 5070)\n```\n:::\n\n\n\n\n\n\n\n## Rasterize\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nraster_template = rast(ext(hospitals_pnw), resolution = 10000,\n                       crs = st_crs(hospitals_pnw)$wkt)\n\nhosp_raster1 = rasterize(hospitals_pnw, raster_template,\n                         field = 1)\n\nplot(hosp_raster1, colNA = \"navy\")\n```\n\n::: {.cell-output-display}\n![](session-16-example_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# add dummy numeric data\nhospitals_pnw$rand_capacity <- rnorm(n = nrow(hospitals_pnw),\n                                     mean = 5000,\n                                     sd = 2000)\n\nhosp_raster3 = rasterize(hospitals_pnw, raster_template, \n                         field = \"rand_capacity\", fun = sum)\n\nplot(hosp_raster3)\n```\n\n::: {.cell-output-display}\n![](session-16-example_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n\n## Raster to Vector\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndem = rast(system.file(\"raster/dem.tif\", package = \"spDataLarge\"))\ncl = as.contour(dem)\n```\n:::\n\n\n\n\n## Creating New Data\n\n### Distance\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nraster_template = rast(ext(hospitals_pnw), resolution = 1000,\n                       crs = st_crs(hospitals_pnw)$wkt)\nhosp_raster1 = rasterize(hospitals_pnw, raster_template,\n                       field = 1)\n\nhosp_dist_rast <- distance(hosp_raster1)\nplot(hosp_dist_rast)\n```\n\n::: {.cell-output-display}\n![](session-16-example_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n\n### Attributes\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwildfire_haz <- rast(\"/opt/data/data/assignment07/wildfire_hazard_agg.tif\")\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhospitals_pnw_proj <- st_transform(hospitals_pnw, crs(wildfire_haz))\n\nhosp_fire_haz <- terra::extract(wildfire_haz, hospitals_pnw_proj)\nhead(hosp_fire_haz)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  ID    WHP_ID\n1  1 1952.8750\n2  2    0.0000\n3  3  741.4531\n4  4  200.2812\n5  5    0.0000\n6  6  150.5938\n```\n\n\n:::\n\n```{.r .cell-code}\nhospitals_pnw_proj$wildfire <- hosp_fire_haz$WHP_ID\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncejst <- st_read(\"/opt/data/data/assignment06/cejst_pnw.shp\") %>%\n  st_transform(crs = crs(wildfire_haz)) %>%\n  filter(!st_is_empty(.))\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwildfire.zones <- terra::zonal(wildfire_haz, vect(cejst), fun=\"mean\", na.rm=TRUE)\n\nhead(wildfire.zones)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       WHP_ID\n1    3.053172\n2 2997.795051\n3    6.647930\n4   85.971309\n5   34.706535\n6   17.306250\n```\n\n\n:::\n:::\n\n\n\n\n## Practice\n\n### Step 1: Load libraries\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sf)\nlibrary(terra)\nlibrary(tidyverse)\nlibrary(tmap)\n```\n:::\n\n\n\n\n### Step 2: Load in data\n\nWe loaded the wildfire hazard data and the cejst data earlier in the example.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# custom function to download and load Forest Service data\ndownload_unzip_read <- function(link){\n  tmp <- tempfile()\n  download.file(link, tmp)\n  tmp2 <- tempfile()\n  unzip(zipfile=tmp, exdir=tmp2)\n  shapefile.sf <- read_sf(tmp2)\n}\n\n### FS Boundaries\nfs.url <- \"https://data.fs.usda.gov/geodata/edw/edw_resources/shp/S_USA.AdministrativeForest.zip\"\nfs.bdry <- download_unzip_read(link = fs.url)\n\n### CFLRP Data\ncflrp.url <- \"https://data.fs.usda.gov/geodata/edw/edw_resources/shp/S_USA.CFLR_HPRP_ProjectBoundary.zip\"\ncflrp.bdry <- download_unzip_read(link = cflrp.url)\n```\n:::\n\n\n\n\n### Step 3: Check validity\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall(st_is_valid(fs.bdry))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nall(st_is_valid(cflrp.bdry))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfs.bdry <- st_make_valid(fs.bdry)\n\ncflrp.bdry <- st_make_valid(cflrp.bdry)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nall(st_is_valid(fs.bdry))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nall(st_is_valid(cflrp.bdry))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n\n\n\n### Step 3: Check alignment\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_crs(fs.bdry)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: NAD83 \n  wkt:\nGEOGCRS[\"NAD83\",\n    DATUM[\"North American Datum 1983\",\n        ELLIPSOID[\"GRS 1980\",6378137,298.257222101,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4269]]\n```\n\n\n:::\n\n```{.r .cell-code}\nst_crs(wildfire_haz)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: unnamed \n  wkt:\nPROJCRS[\"unnamed\",\n    BASEGEOGCRS[\"NAD83\",\n        DATUM[\"North American Datum 1983\",\n            ELLIPSOID[\"GRS 1980\",6378137,298.257222101004,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4269]],\n    CONVERSION[\"Albers Equal Area\",\n        METHOD[\"Albers Equal Area\",\n            ID[\"EPSG\",9822]],\n        PARAMETER[\"Latitude of false origin\",23,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8821]],\n        PARAMETER[\"Longitude of false origin\",-96,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8822]],\n        PARAMETER[\"Latitude of 1st standard parallel\",29.5,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8823]],\n        PARAMETER[\"Latitude of 2nd standard parallel\",45.5,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8824]],\n        PARAMETER[\"Easting at false origin\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8826]],\n        PARAMETER[\"Northing at false origin\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8827]]],\n    CS[Cartesian,2],\n        AXIS[\"easting\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"northing\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n```\n\n\n:::\n\n```{.r .cell-code}\nst_crs(cflrp.bdry)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: NAD83 \n  wkt:\nGEOGCRS[\"NAD83\",\n    DATUM[\"North American Datum 1983\",\n        ELLIPSOID[\"GRS 1980\",6378137,298.257222101,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4269]]\n```\n\n\n:::\n\n```{.r .cell-code}\nst_crs(cejst)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: PROJCRS[\"unnamed\",\n    BASEGEOGCRS[\"NAD83\",\n        DATUM[\"North American Datum 1983\",\n            ELLIPSOID[\"GRS 1980\",6378137,298.257222101004,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4269]],\n    CONVERSION[\"Albers Equal Area\",\n        METHOD[\"Albers Equal Area\",\n            ID[\"EPSG\",9822]],\n        PARAMETER[\"Latitude of false origin\",23,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8821]],\n        PARAMETER[\"Longitude of false origin\",-96,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8822]],\n        PARAMETER[\"Latitude of 1st standard parallel\",29.5,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8823]],\n        PARAMETER[\"Latitude of 2nd standard parallel\",45.5,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8824]],\n        PARAMETER[\"Easting at false origin\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8826]],\n        PARAMETER[\"Northing at false origin\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8827]]],\n    CS[Cartesian,2],\n        AXIS[\"easting\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"northing\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]] \n  wkt:\nPROJCRS[\"unnamed\",\n    BASEGEOGCRS[\"NAD83\",\n        DATUM[\"North American Datum 1983\",\n            ELLIPSOID[\"GRS 1980\",6378137,298.257222101004,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4269]],\n    CONVERSION[\"Albers Equal Area\",\n        METHOD[\"Albers Equal Area\",\n            ID[\"EPSG\",9822]],\n        PARAMETER[\"Latitude of false origin\",23,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8821]],\n        PARAMETER[\"Longitude of false origin\",-96,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8822]],\n        PARAMETER[\"Latitude of 1st standard parallel\",29.5,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8823]],\n        PARAMETER[\"Latitude of 2nd standard parallel\",45.5,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8824]],\n        PARAMETER[\"Easting at false origin\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8826]],\n        PARAMETER[\"Northing at false origin\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8827]]],\n    CS[Cartesian,2],\n        AXIS[\"easting\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"northing\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n```\n\n\n:::\n\n```{.r .cell-code}\nst_crs(wildfire_haz) == st_crs(cejst)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nst_crs(wildfire_haz) == st_crs(fs.bdry)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\ntarget_crs <- st_crs(wildfire_haz)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfs.bdry_proj <- st_transform(fs.bdry, crs = target_crs)\nst_crs(fs.bdry_proj) == target_crs\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nst_crs(fs.bdry_proj) == st_crs(wildfire_haz)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\ncflrp.bdry_proj <- st_transform(cflrp.bdry, crs = st_crs(wildfire_haz))\n```\n:::\n\n\n\n\n### Step 4: Subset to geographies\n\ncejst is our study area (the Pacific Northwest) to subset to.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfs.subset <- fs.bdry_proj[cejst, ]\ncflrp.subset <- cflrp.bdry_proj[cejst, ]\n\n# keep only tracts that intersect Forest Service land\ncejst.subset <- cejst[fs.subset, ]\n```\n:::\n\n\n\n\n### Step 5: Select attributes of interest\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncejst.df <- cejst.subset %>% \n  select(GEOID10, LMI_PFS, LHE, HBF_PFS)\nhead(cejst.df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 6 features and 4 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -1598729 ymin: 2388182 xmax: -1475201 ymax: 3000813\nProjected CRS: unnamed\n       GEOID10 LMI_PFS LHE HBF_PFS                       geometry\n2  16025970100    0.75   0    0.60 MULTIPOLYGON (((-1485848 24...\n17 16057005500    0.43   0    0.44 MULTIPOLYGON (((-1567845 28...\n21 16057005600    0.30   0    0.05 MULTIPOLYGON (((-1573408 28...\n22 16009950100    0.55   1    0.40 MULTIPOLYGON (((-1566013 28...\n23 16017950500    0.75   1    0.53 MULTIPOLYGON (((-1545064 29...\n24 16017950400    0.60   1    0.68 MULTIPOLYGON (((-1544958 29...\n```\n\n\n:::\n:::\n\n\n\n\n### Step 6: Extract wildfire hazard\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncejst.fire <- terra::extract(wildfire_haz, vect(cejst.df), fun=mean, na.rm=TRUE)\nhead(cejst.fire)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  ID    WHP_ID\n1  1 2997.7951\n2  2  182.8864\n3  3  386.9580\n4  4  173.1703\n5  5  193.4199\n6  6  210.4406\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncejst.df$WHP_ID <- cejst.fire$WHP_ID\n```\n:::\n\n\n\n\n### Step 7: Does each tract intersect a CFLRP boundary?\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncejst.cflrp <- apply(st_intersects(cejst.df, cflrp.subset, sparse=FALSE), 1, any)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncejst.df <- cejst.df %>%\n  mutate(CFLRP = cejst.cflrp)\n```\n:::\n\n\n\n\n### Step 8: Compare areas\n\nMany comparisons are possible! Here are some examples.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncflrp.summ <- cejst.df %>%\n  st_drop_geometry() %>%\n  group_by(CFLRP) %>%\n  summarise(across(LMI_PFS:WHP_ID, ~ mean(.x, na.rm=TRUE)))\n\nggplot(data = cejst.df, aes(x=CFLRP, y=WHP_ID)) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](session-16-example_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "session-16-example_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}