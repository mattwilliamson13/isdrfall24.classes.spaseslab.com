{
  "hash": "52f75dcb44cb6e4687f00088c8f42bf5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Intro to Mapping\"\nauthor: \"Carolyn Koehn\"\nformat: html\n---\n\n\n### Base `plot` methods:\n\nLoad library and vector data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sf)\n\ncejst <- st_read(\"/opt/data/data/assignment04/cejst_nw.shp\")\n```\n:::\n\n\n\n\nPlot vector data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(st_geometry(cejst))\n\nplot(cejst$geometry)\n```\n\n::: {.cell-output-display}\n![](session-09-example_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(cejst[\"EALR_PFS\"])\n```\n\n::: {.cell-output-display}\n![](session-09-example_files/figure-html/unnamed-chunk-3-2.png){width=672}\n:::\n:::\n\n\nSee column name meanings:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nView(read.csv(\"/opt/data/data/assignment04/columns.csv\"))\n```\n:::\n\n\nRead in library and raster data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(terra)\n\nrast.data <- rast(\"/opt/data/data/assignment03/wildfire_hazard_agg.tif\")\n```\n:::\n\n\n\n\nPlot raster:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(rast.data)\n```\n\n::: {.cell-output-display}\n![](session-09-example_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(rast.data, col=heat.colors(24, rev=TRUE))\n```\n\n::: {.cell-output-display}\n![](session-09-example_files/figure-html/unnamed-chunk-7-2.png){width=672}\n:::\n:::\n\n\nCombine raster and vector data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(rast.data, col=heat.colors(24, rev=TRUE))\nplot(st_geometry(st_transform(cejst, crs=crs(rast.data))), add=TRUE)\n```\n\n::: {.cell-output-display}\n![](session-09-example_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\nCombining two vectors:\n\nIn class, we could not get the bounding box to appear. The fix is to plot the bounding box before the census tracts. Why would this be? `plot` will only plot a geometry if the entire shape fits in the current plot window. Because of rounding error introduced in `st_as_sfc` and `st_transform`, the `bounding_box` polygon is slightly larger than the plot window. Because `plot` couldn't fit all its vertices, the bounding box did not appear.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbounding_box <- st_as_sfc(st_bbox(cejst))\n\nplot(st_geometry(st_transform(bounding_box, crs=st_crs(cejst))), col=\"red\")\nplot(cejst[\"EALR_PFS\"], add=TRUE)\n```\n\n::: {.cell-output-display}\n![](session-09-example_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# note how xmax of the bounding_box object is slightly higher than the true xmax\nst_bbox(cejst)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      xmin       ymin       xmax       ymax \n-124.76255   41.98801 -111.04349   49.00249 \n```\n\n\n:::\n\n```{.r .cell-code}\nst_coordinates(st_geometry(st_transform(bounding_box, crs=st_crs(cejst))))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n             X        Y L1 L2\n[1,] -124.7625 41.98801  1  1\n[2,] -111.0435 41.98801  1  1\n[3,] -111.0435 49.00249  1  1\n[4,] -124.7625 49.00249  1  1\n[5,] -124.7625 41.98801  1  1\n```\n\n\n:::\n:::\n\n\n### `tmap` methods:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tmap)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nBreaking News: tmap 3.x is retiring. Please test v4, e.g. with\nremotes::install_github('r-tmap/tmap')\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ tidyr::extract() masks terra::extract()\n✖ dplyr::filter()  masks stats::filter()\n✖ dplyr::lag()     masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(viridis)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: viridisLite\n```\n\n\n:::\n\n```{.r .cell-code}\ncejst_filt <- cejst %>%\n  filter(!st_is_empty(.))\n\npt <- tm_shape(cejst_filt) +\n  tm_polygons(col = \"EALR_PFS\", n=10, palette=viridis(10),\n              border.col = \"white\") +\n  tm_legend(outside = TRUE)\n```\n:::\n\n\nLayering in tmap:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst <- tigris::states(progress_bar=FALSE) %>% \n  filter(STUSPS %in% c(\"ID\", \"WA\", \"OR\")) %>% \n  st_transform(., crs = st_crs(cejst))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRetrieving data for the year 2021\n```\n\n\n:::\n\n```{.r .cell-code}\npt2 <- tm_shape(cejst_filt) +\n  tm_polygons(col = \"EALR_PFS\", n=10, palette=viridis(10),\n              border.col=\"white\") +\n  tm_shape(st) +\n  tm_borders(col=\"red\") +\n  tm_legend(outside = TRUE)\n```\n:::\n\n\nLayering a raster in tmap:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncejst.proj <- st_transform(cejst, crs=crs(rast.data)) %>% filter(!st_is_empty(.))\nstates.proj <- st_transform(st, crs=crs(rast.data))\n\npal8 <- c(\"#33A02C\", \"#B2DF8A\", \"#FDBF6F\", \"#1F78B4\", \"#999999\", \"#E31A1C\", \"#E6E6E6\", \"#A6CEE3\")\n\npt3 <- tm_shape(rast.data) +\n  tm_raster() +\n  # tm_shape(cejst.proj) + \n  # tm_polygons(col = \"EALR_PFS\", n=10,palette=viridis(10),\n  #             border.col = \"white\") + \n  tm_shape(states.proj) +\n  tm_borders(\"red\") +\n  tm_legend(outside = TRUE)\n```\n:::\n\n\nYou can use `tmap_mode(\"view\")` to enable zoom on your maps.",
    "supporting": [
      "session-09-example_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}