{
  "hash": "e0ae0520617581760dc33b8d309d1da4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Session 10 Code\"\nauthor: \"Carolyn Koehn\"\nformat: html\n---\n\n\n### Load libraries\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sf)\nlibrary(tidyverse)\n```\n:::\n\n\n### Centroids vs Point on Surface\n\n\n::: {.cell}\n\n```{.r .cell-code}\nid.counties <- tigris::counties(state = \"ID\", progress_bar=FALSE)\nid.centroid <- st_centroid(id.counties)\nid.pointonsurf <- st_point_on_surface(id.counties)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(st_geometry(id.counties))\nplot(st_geometry(id.centroid), col=\"blue\", add=TRUE)\nplot(st_geometry(id.pointonsurf), col=\"red\", add=TRUE)\n```\n\n::: {.cell-output-display}\n![](session-10-example_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n### Practice Example 1: Distance on Points and Polygons\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsystem.time(poly_dist <- st_distance(id.counties))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   user  system elapsed \n   4.32    0.03    4.36 \n```\n\n\n:::\n\n```{.r .cell-code}\nsystem.time(cent_dist <- st_distance(id.centroid))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   user  system elapsed \n   0.00    0.00    0.01 \n```\n\n\n:::\n\n```{.r .cell-code}\nsystem.time(pos_dist <- st_distance(id.pointonsurf))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   user  system elapsed \n   0.02    0.00    0.00 \n```\n\n\n:::\n:::\n\n\n### Practice Example 2: Intersections and Buffers\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# get roads data\nroads <- tigris::primary_secondary_roads(\"ID\", progress_bar=FALSE)\n\n# get a polygon of Ada county\nada.cty <- filter(id.counties, NAME == \"Ada\")\n\n# find all road sections within Ada county\nada.roads <- st_intersection(roads, ada.cty)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# plot result\nplot(st_geometry(ada.cty))\nplot(st_geometry(ada.roads), col=\"purple\", add=TRUE)\n```\n\n::: {.cell-output-display}\n![](session-10-example_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# check the units of the CRS\nst_crs(id.centroid)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: NAD83 \n  wkt:\nGEOGCRS[\"NAD83\",\n    DATUM[\"North American Datum 1983\",\n        ELLIPSOID[\"GRS 1980\",6378137,298.257222101,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4269]]\n```\n\n\n:::\n\n```{.r .cell-code}\n# create a 50km buffer around the centroid of Ada county\nada.cent <- filter(id.centroid, NAME == \"Ada\")\nada.buff <- st_buffer(ada.cent, dist = 50000)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# get roads within buffer zone\nroads.buff <- st_intersection(roads, ada.buff)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# plot result\nplot(st_geometry(roads.buff))\n```\n\n::: {.cell-output-display}\n![](session-10-example_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nIf we want to plot county boundaries, `st_intersection` won't work. We'll only get parts of each county polygon:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncty.buff <- st_intersection(id.counties, ada.buff)\nplot(st_geometry(cty.buff))\n```\n\n::: {.cell-output-display}\n![](session-10-example_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nBack to predicates!\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# find counties that intersect with buffer\ncty.50 <- st_intersects(id.counties, ada.buff, sparse = FALSE)\n# convert to vector so filter is happy\ncty.50 <- as.vector(cty.50)\n\n# get counties that intersect buffer\nmap.counties <- filter(id.counties, cty.50)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# plot result\nplot(map.counties$geometry)\nplot(st_geometry(roads.buff), col=\"purple\", add=TRUE)\n```\n\n::: {.cell-output-display}\n![](session-10-example_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "session-10-example_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}