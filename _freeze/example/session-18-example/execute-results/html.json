{
  "hash": "23f041c2cc7913b4642b743e60ab4058",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Session 18 code\"\nauthor: \"Carolyn Koehn\"\nformat: html\n---\n\n\n\n\nLoad libraries:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(terra)\nlibrary(spdep)\nlibrary(tidyverse)\nlibrary(gstat)\n```\n:::\n\n\n\n\n## Stochastic Process\n\nThe deterministic $z = 2x + 3y$ process becomes stochasic with the addition of the $d$ term: $z = 2x + 3y + d$. In the example below, $d$ is pulled from a uniform distribution with range -50 to 50 and results in six very different simulated results.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- rast(nrows = 10, ncols=10, xmin = 0, xmax=10, ymin = 0, ymax=10)\nvalues(x) <- 1\n\nfun <- function(z){\n  a <- z\n  d <- runif(ncell(z), -50, 50)\n  values(a) <- 2 * crds(x)[,1] + 3*crds(x)[,2] + d\n  return(a)\n}\n\nb <- replicate(n=6, fun(z=x), simplify=FALSE)\nd <- do.call(c, b)\n```\n:::\n\n\n\n\n## Moran's I\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(2354)\n# Load the shapefile\ns <- readRDS(url(\"https://github.com/mgimond/Data/raw/gh-pages/Exercises/fl_hr80.rds\"))\n\n# Define the neighbors (use queen case)\nnb <- poly2nb(s, queen=TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nold-style crs object detected; please recreate object with a recent sf::st_crs()\nold-style crs object detected; please recreate object with a recent sf::st_crs()\nold-style crs object detected; please recreate object with a recent sf::st_crs()\n```\n\n\n:::\n\n```{.r .cell-code}\n# Compute the neighboring average homicide rates\nlw <- nb2listw(nb, style=\"W\", zero.policy=TRUE)\n#estimate Moran's I\nmoran.test(s$HR80,lw, alternative=\"greater\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  s$HR80  \nweights: lw    \n\nMoran I statistic standard deviate = 1.8891, p-value = 0.02944\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.136277593      -0.015151515       0.006425761 \n```\n\n\n:::\n:::\n\n\n\n\n## Nearest Neighbor Interpolation\n\nEach cell takes the value of its nearest neighbor point.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# data retrieved from https://www.epa.gov/outdoor-air-quality-data/download-daily-data\n\naq <- read_csv(\"/opt/data/data/classexamples/ad_viz_plotval_data_PM25_2024_ID.csv\") %>% \n  st_as_sf(., coords = c(\"Site Longitude\", \"Site Latitude\"), crs = \"EPSG:4326\") %>% \n  st_transform(., crs = \"EPSG:8826\") %>% \n  mutate(date = as_date(parse_datetime(Date, \"%m/%d/%Y\"))) %>% \n  filter(., date >= 2024-07-01) %>% \n  filter(., date > \"2024-07-01\" & date < \"2024-07-31\")\naq.sum <- aq %>% \n  group_by(., `Site ID`) %>% \n  summarise(., meanpm25 = mean(`Daily AQI Value`))\n\nnodes <- st_make_grid(aq.sum,\n                      what = \"centers\")\n\ndist <- distance(vect(nodes), vect(aq.sum))\nnearest <- apply(dist, 1, function(x) which(x == min(x)))\naq.nn <- aq.sum$meanpm25[nearest]\npreds <- st_as_sf(nodes)\npreds$aq <- aq.nn\n\npreds <- as(preds, \"Spatial\")\nsp::gridded(preds) <- TRUE\npreds.rast <- rast(preds)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnodes_bounds <- st_make_grid(aq.sum,\n                      what = \"polygons\")\n\nplot(preds.rast)\nplot(st_geometry(aq.sum), add=TRUE)\nplot(nodes_bounds, add=TRUE)\n```\n\n::: {.cell-output-display}\n![](session-18-example_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n\n## Inverse Distance Weighting\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmgsf05 <- gstat(id = \"meanpm25\", formula = meanpm25~1, data=aq.sum,  nmax=7, set=list(idp = 0.5))\nmgsf2 <- gstat(id = \"meanpm25\", formula = meanpm25~1, data=aq.sum,  nmax=7, set=list(idp = 2))\n\ninterpolate_gstat <- function(model, x, crs, ...) {\n    v <- st_as_sf(x, coords=c(\"x\", \"y\"), crs=crs)\n    p <- predict(model, v, ...)\n    as.data.frame(p)[,1:2]\n}\n\nzsf05 <- interpolate(preds.rast, mgsf05, debug.level=0, fun=interpolate_gstat, crs=crs(preds.rast), index=1)\nzsf2 <- interpolate(preds.rast, mgsf2, debug.level=0, fun=interpolate_gstat, crs=crs(preds.rast), index=1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow=c(1,2))\nplot(zsf05, main=\"idp=0.5\")\nplot(zsf2, main=\"idp=2\")\n```\n\n::: {.cell-output-display}\n![](session-18-example_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n\n\n`persp` can help us visualize smoothness by creating a 3D representation of a raster.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow=c(1,2))\npersp(zsf05,box=FALSE, main=\"idp=0.5\")\npersp(zsf2, box=FALSE,main=\"idp=2\")\n```\n\n::: {.cell-output-display}\n![](session-18-example_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n\nWe assessed which raster cells were the most different between the two models.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest <- zsf05 - zsf2\nplot(test)\n```\n\n::: {.cell-output-display}\n![](session-18-example_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "session-18-example_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}