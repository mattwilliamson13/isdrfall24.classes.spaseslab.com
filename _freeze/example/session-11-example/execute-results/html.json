{
  "hash": "9696ab79c646573a4cd877ccc4a9871d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Session 11 Code\"\nauthor: \"Carolyn Koehn\"\nformat: html\n---\n\n\n\n\n\nCode for questions 1 and 2 can be found in [Session 11](../content/11-content.qmd), in both the slides and the Panopto recording.\n\n## Question 3\n\n### What do we need to know?\n\n![](img/ex11_what_to_know.jpg)\n\n### Pseudocode\n\n![](img/ex11_pseudocode.jpg)\n\n### Step 1: Get cdc data and project if necessary\n\nWe did this in the previous questions -- the dataset is `cdc.idaho`.\n\n### Step 2: Get hospital data and project if necessary\n\nWe did this in the previous questions -- the dataset is `hospital.sf.proj`.\n\n### Step 3: Buffer service areas around hospitals\n\nWe did this in the previous questions -- the dataset is `hospital.buf`.\n\n### Step 4: Find intersections of service areas\n\nWe did this in the previous questions -- the dataset is `hospital.int.overlaps`. However, we re-projected it, so now we need to project `cdc.idaho` to the same projection. A plot shows that they are aligned.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncdc.idaho.proj <- st_transform(cdc.idaho, crs=st_crs(hospital.int.overlaps))\n\nplot(st_geometry(cdc.idaho.proj), col=\"purple\")\nplot(st_geometry(hospital.int.overlaps), add=TRUE)\n```\n\n::: {.cell-output-display}\n![](session-11-example_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n### Step 5: Find tracts that overlap those intersections\n\n\n::: {.cell}\n\n```{.r .cell-code}\noverlap.tracts.matrix <- st_intersects(cdc.idaho.proj, hospital.int.overlaps, sparse = FALSE)\n\noverlap.tracts.matrix[1:12, 1:5]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       [,1]  [,2]  [,3]  [,4]  [,5]\n [1,] FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE  TRUE FALSE FALSE\n [6,] FALSE FALSE  TRUE FALSE FALSE\n [7,] FALSE FALSE  TRUE FALSE FALSE\n [8,] FALSE FALSE  TRUE FALSE FALSE\n [9,] FALSE FALSE  TRUE FALSE FALSE\n[10,] FALSE FALSE  TRUE FALSE FALSE\n[11,] FALSE FALSE  TRUE FALSE FALSE\n[12,] FALSE FALSE  TRUE FALSE FALSE\n```\n\n\n:::\n:::\n\n\nThis creates a logical matrix where each row corresponds to a tract, and the cells in the matrix show whether it overlaps with each overlap area (`TRUE`) or whether it does not (`FALSE`). The cool thing about logicals is that they also count as numbers (`TRUE` = `1`, `FALSE` = `0`). By finding the `rowSums`, we can see which tracts overlap with 2+ hospital areas (rowSum >= 1) and which don't (rowSum = 0).\n\n\n::: {.cell}\n\n```{.r .cell-code}\noverlap.tracts.filter <- rowSums(overlap.tracts.matrix)\n\noverlap.tracts <- cdc.idaho.proj[overlap.tracts.filter>=1, ]\n\nplot(st_geometry(overlap.tracts), col=\"cornflowerblue\")\nplot(st_geometry(hospital.int.overlaps), add=TRUE, col=\"orange\")\n```\n\n::: {.cell-output-display}\n![](session-11-example_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nFor an alternate tidyverse integration, see [this Stack Overflow question](https://stackoverflow.com/questions/57014381/how-to-filter-an-r-simple-features-collection-using-sf-methods-like-st-intersect).\n\n### Step 6: Find tracts outside of service buffers\n\nWe'll use the same process as step 5, but this time we'll keep the rowSums that are equal to 0.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnohosp.tracts.matrix <- st_intersects(cdc.idaho.proj, hospital.buf, sparse = FALSE)\nnohosp.tracts.matrix[1:12, 1:5]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       [,1]  [,2]  [,3]  [,4]  [,5]\n [1,] FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE  TRUE FALSE FALSE\n [6,] FALSE FALSE  TRUE FALSE FALSE\n [7,] FALSE FALSE  TRUE FALSE FALSE\n [8,] FALSE FALSE  TRUE FALSE FALSE\n [9,] FALSE FALSE  TRUE FALSE FALSE\n[10,] FALSE FALSE  TRUE FALSE FALSE\n[11,] FALSE FALSE  TRUE FALSE FALSE\n[12,] FALSE FALSE  TRUE FALSE FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nnohosp.tracts.filter <- rowSums(nohosp.tracts.matrix)\n\nnohosp.tracts <- cdc.idaho.proj[nohosp.tracts.filter==0, ]\n\nplot(st_geometry(nohosp.tracts), col=\"firebrick\")\nplot(st_geometry(hospital.buf), add=TRUE, col=\"orange\")\n```\n\n::: {.cell-output-display}\n![](session-11-example_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n### Step 7: Calculate average chronic heart disease rate for both groups of tracts\n\n\n::: {.cell}\n\n```{.r .cell-code}\navg.nohosp.rate <- mean(nohosp.tracts$chd_crudep)\n\navg.overlaps.rate <- mean(overlap.tracts$chd_crudep)\n```\n:::\n\n\n### Step 8: Find the difference\n\n\n::: {.cell}\n\n```{.r .cell-code}\navg.overlaps.rate - avg.nohosp.rate\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.36875\n```\n\n\n:::\n:::\n\n\nThe rates of chronic heart disease are on average higher in tracts with multiple hospitals than those with no hospitals. Maybe there's less access to a diagnosis, or heart disease is more fatal to people with less hospital access...?",
    "supporting": [
      "session-11-example_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}